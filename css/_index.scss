.main {
	display: grid;
	/*
		repeat: number of columns, width of columns.
		For example, in here I wanted a 12 column grid that equalled 100% of the browser width.

		This can be used in conjunction with other columns, ex:
		 200px repeat(10, 10%) 200px;

		 You may also use auto columns similar to the rows example shown below.
	*/
	grid-template-columns: repeat(12, 8.3%);
	// grid-auto-columns: 8.3%;

	/*
		Rows may be added implicitly or explicitly.

		The grid-template-rows can work explicitly like the grid columns OR you may create grid rows as needed with the grid-auto-rows version.

		You may set the rows to automatically expand in height with minmax.
	*/
	// grid-template-rows: repeat(12, 8.3vh);
	grid-auto-rows: minmax(10px, auto);

	/*
		if you want gutters, you may add them with grid-column-gap.
		You may also choose to have gaps between rows with grid-row-gap.  Shorthand row and column is grid-gap.

		If using the fr option on your columns and rows, these gutters will be accounted for before the columns are made.
	*/

	// grid-column-gap: 10px;
	// grid-row-gap: 10px;
	// grid-gap: 10px;

}

/*
grid column/row start and grid column/row end determine how much space everything will take up on your grid.

the shorthand version looks like a fraction
*/

.header {
	background-color: $pale-yellow;
	color: $black;
	border: 2px solid $yellow;
	border-radius: 3px;
	grid-column: 1/13;
	grid-row: 1/3;

	&__title {
		text-align: center;
		color: $white;
	}

	@media only screen and (min-width: 768px) and (max-width: 1024px) {
		background-color: $pale-lime;
		border: 2px solid $lime;
		grid-column: 1/13;
		grid-row: 10/13;
	}

	@media only screen and (min-width: 1025px) {
		background-color: $pale-magenta;
		border: 2px solid $magenta;
		border-radius: 3px;
		grid-column: 1/13;
		grid-row: 1/3;
	}
}

.sidebar {
	background-color: $pale-lime;
	border: 2px solid $lime;
	border-radius: 3px;
	grid-column: 1/13;
	grid-row: 3/6;

	&__title {
		text-align: center;
		color: $white;
	}

	@media only screen and (min-width: 768px) and (max-width: 1024px) {
		background-color: $pale-cyan;
		border: 2px solid $cyan;
		grid-column: 4/13;
		grid-row: 3/10;
	}

	@media only screen and (min-width: 1025px) {
		background-color: $pale-lime;
		border: 2px solid $lime;
		border-radius: 3px;
		grid-column: 1/4;
		grid-row: 3/10;
	}
}

.body {
	background-color: $pale-cyan;
	border: 2px solid $cyan;
	border-radius: 3px;
	grid-column: 1/13;
	grid-row: 6/10;

	&__title {
		text-align: center;
		color: $white;
	}

	&__image {
		display: block;
		margin: 0 auto;
		width: 200px;
	}

	&__paragraph {
		padding: 0 5px;
	}

	@media only screen and (min-width: 768px) and (max-width: 1024px) {
		background-color: $pale-lime;
		border: 2px solid $lime;
		grid-column: 1/4;
		grid-row-start: 3/10;

		&__image {
			display: block;
			margin: 0 auto;
			width: 400px;
		}
	}

	@media only screen and (min-width: 1025px) {
		background-color: $pale-cyan;
		border: 2px solid $cyan;
		border-radius: 3px;
		grid-column: 4/13;
		grid-row: 3/10;

		&__image {
			display: block;
			margin: 0 auto;
			width: 600px;
		}
	}
}

.footer {
	background-color: $pale-purple;
	border: 2px solid $purple;
	border-radius: 3px;
	grid-column: 1/13;
	grid-row: 10/13;

	&__title {
		text-align: center;
		color: $white;
	}

	@media only screen and (min-width: 768px) and (max-width: 1024px) {
		background-color: $pale-magenta;
		border: 2px solid $magenta;
		grid-column: 1/13;
		grid-row: 1/3;
	}

	@media only screen and (min-width: 1025px) {
		background-color: $pale-purple;
		border: 2px solid $purple;
		border-radius: 3px;
		grid-column: 1/13;
		grid-row: 10/13;
	}
}


