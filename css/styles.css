html,
body {
  height: 100%;
  overflow: scroll;
  margin: 0; }

body {
  color: #000;
  background-color: #fff;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-size: 16px;
  line-height: 22px; }

.main {
  display: grid;
  	/*
  		repeat: number of columns, width of columns.
  		For example, in here I wanted a 12 column grid that equalled 100% of the browser width.
  
  		This can be used in conjunction with other columns, ex:
  		 200px repeat(10, 10%) 200px;
  
  		 You may also use auto columns similar to the rows example shown below.
  	*/
  grid-template-columns: repeat(12, 8%);
  	/*
  		Rows may be added implicitly or explicitly.
  
  		The grid-template-rows can work explicitly like the grid columns OR you may create grid rows as needed with the grid-auto-rows version.
  
  		You may set the rows to automatically expand in height with minmax.
  	*/
  grid-auto-rows: minmax(0, auto); }

.header {
  background-color: rgba(255, 0, 255, 0.7);
  border: 2px solid #ff00ff;
  border-radius: 3px; }
  .header__title {
    text-align: center;
    color: #fff; }

.sidebar {
  background-color: rgba(0, 255, 0, 0.7);
  border: 2px solid #00ff00;
  border-radius: 3px; }
  .sidebar__title {
    text-align: center;
    color: #fff; }

.body {
  background-color: rgba(0, 255, 255, 0.7);
  border: 2px solid #00ffff;
  border-radius: 3px; }
  .body__title {
    text-align: center;
    color: #fff; }

.footer {
  background-color: rgba(255, 255, 0, 0.7);
  border: 2px solid #ffff00;
  border-radius: 3px; }
  .footer__title {
    text-align: center;
    color: #fff; }

/*# sourceMappingURL=styles.css.map */
